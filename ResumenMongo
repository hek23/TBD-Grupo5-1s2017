show dbs
use databasename (databasename es db ahora)
db.collection.find() (collection es el nombre de la coleccion. Tambien se usa getCollection())
.insert()
show collections (muestra colecciones)
.pretty() (a un documento. Permite la buena visualizacion de un documento)

La busqueda en subdocumentos tiene la forma de objetos (a.b). Para arreglos se puede as√≠

db.restaurants.find( { "grades.grade": "B" } )

{$and:[{},{},{}]}
{attr: {$ne: val}}
{attr: {$regex: exp}}
{attr: {$gt: val} 
lo mismo para 
lt

db.col.find(docparam).sort({"attr":1...})

db.col.update({searchparam}.{ $set:{attr: val}},{multi: bool})



//Todas las Relaciones
SELECT tweetsqty, c.Name, d.Name FROM Influence inner join Country c on (Influence.origin = c.idCountry) inner join Country d on (d.idCountry = Influence.destiny) ;

//Todos los nodos
SELECT SUM(tweetsqty) as sumTweets, c.Name FROM Influence inner join Country c on  (Influence.origin = c.idCountry) GROUP BY c.idCountry;

//Relaciones originadas por alguien
SELECT tweetsqty, c.Name, d.Name FROM Influence
inner join Country c on 
(Influence.origin = c.idCountry) 
inner join Country d on 
(d.idCountry = Influence.destiny) where Influence.origin = ?;